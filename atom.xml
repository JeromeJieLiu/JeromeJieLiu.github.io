<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thorn的分享小站</title>
  
  <subtitle>听从你心,无问西东</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-31T09:26:12.589Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Thorn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js总结</title>
    <link href="http://yoursite.com/2018/08/31/js%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/08/31/js总结/</id>
    <published>2018-08-31T09:15:47.000Z</published>
    <updated>2018-08-31T09:26:12.589Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JavaScript的DOM和BOM"><a href="#JavaScript的DOM和BOM" class="headerlink" title="JavaScript的DOM和BOM"></a>JavaScript的DOM和BOM</h3><h4 id="第一节-JavaScript的DOM"><a href="#第一节-JavaScript的DOM" class="headerlink" title="第一节 JavaScript的DOM"></a>第一节 JavaScript的DOM</h4><p>JavaScript主要包括三部分内容:ECMAScript、DOM、BOM</p><a id="more"></a><h5 id="1-1-DOM概述"><a href="#1-1-DOM概述" class="headerlink" title="1.1 DOM概述"></a>1.1 DOM概述</h5><p>通过 HTML DOM,使用 JavaScript访问 HTML 文档的所有元素。</p><p>当网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model）。</p><p><strong>HTML DOM</strong> 模型被构造为<strong>对象</strong>的树：</p><p><img src="/img/img1.jpg"></p><p>通过可编程的对象模型，JavaScript 获得了足够的能力来创建动态的 HTML。</p><ul><li>JavaScript 能够改变页面中的所有 HTML 元素。</li><li>JavaScript 能够改变页面中的所有 HTML 属性。</li><li>JavaScript 能够改变页面中的所有 CSS 样式。</li><li>JavaScript 能够对页面中的所有事件做出反应。</li></ul><h5 id="1-2-获取HTML元素"><a href="#1-2-获取HTML元素" class="headerlink" title="1.2 获取HTML元素"></a>1.2 获取HTML元素</h5><p>通常，通过 JavaScript，您需要操作 HTML 元素。</p><p>为了做到这件事情，您必须首先找到该元素。有三种方法来做这件事：</p><ul><li>通过 id 找到 HTML 元素</li><li>通过标签名找到 HTML 元素</li><li>通过类名找到HTML 元素</li></ul><h6 id="4-2-1-id找到HTML元素"><a href="#4-2-1-id找到HTML元素" class="headerlink" title="4.2.1 id找到HTML元素"></a>4.2.1 id找到HTML元素</h6><p>在 DOM 中查找 HTML 元素的最简单的方法，是通过使用元素的 id。</p><p>本例查找 id=”intro” 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="built_in">document</span>.getElementById(<span class="string">"intro"</span>);</span><br></pre></td></tr></table></figure><p>如果找到该元素，则该方法将以对象（在 x 中）的形式返回该元素。</p><p>如果未找到该元素，则 x 将包含 null。</p><h6 id="1-2-2-标签名找到-HTML-元素"><a href="#1-2-2-标签名找到-HTML-元素" class="headerlink" title="1.2.2 标签名找到 HTML 元素"></a>1.2.2 标签名找到 HTML 元素</h6><p>本例查找 id=”main” 的元素，然后查找 id=”main” 元素中的所有 </p><p> 元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="built_in">document</span>.getElementById(<span class="string">"main"</span>);</span><br><span class="line"><span class="keyword">var</span> y=x.getElementsByTagName(<span class="string">"p"</span>);</span><br></pre></td></tr></table></figure><h6 id="1-2-3-类名找到HTML-元素"><a href="#1-2-3-类名找到HTML-元素" class="headerlink" title="1.2.3 类名找到HTML 元素"></a>1.2.3 类名找到HTML 元素</h6><p>本例通过 getElementsByClassName 函数来查找 class=”intro” 的元素：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="built_in">document</span>.getElementsByClassName(<span class="string">"intro"</span>);</span><br></pre></td></tr></table></figure><h5 id="1-3-修改HTML"><a href="#1-3-修改HTML" class="headerlink" title="1.3 修改HTML"></a>1.3 修改HTML</h5><p>HTML DOM 允许 JavaScript 改变 HTML 元素的内容。</p><h6 id="1-3-1-改变HTML内容"><a href="#1-3-1-改变HTML内容" class="headerlink" title="1.3.1 改变HTML内容"></a>1.3.1 改变HTML内容</h6><p>修改 HTML 内容的最简单的方法时使用 innerHTML 属性。</p><p>如需改变 HTML 元素的内容，请使用这个语法：</p><p>document.getElementById(<em>id</em>).innerHTML=”<em>abcd</em>“;</p><p>document.getElementById(<em>id</em>).innerText=”xxxx”;</p><p>本例改变了 </p><p>元素的内容：</p><p>本例改变了 </p><p>元素的内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"p1"</span>).innerHTML=<span class="string">"abcd"</span>;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="img\img12.png" alt="img9"></p><h6 id="1-3-2-改变HTML属性"><a href="#1-3-2-改变HTML属性" class="headerlink" title="1.3.2 改变HTML属性"></a>1.3.2 改变HTML属性</h6><p>如需改变 HTML 元素的属性，请使用这个语法：</p><p>document.getElementById(<em>id</em>).<em>attribute=新属性值</em></p><p>本例改变了 <img> 元素的 src 属性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"1.gif"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"image"</span>).src=<span class="string">"2.jpg"</span>;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-4-修改CSS样式"><a href="#1-4-修改CSS样式" class="headerlink" title="1.4 修改CSS样式"></a>1.4 修改CSS样式</h5><p>改变HTML的样式：</p><p>如需改变 HTML 元素的样式，请使用这个语法：</p><p>document.getElementById(<em>id</em>).style.<em>property</em>=<em>新样式</em></p><p>下面的例子会改变 </p><p> 元素的样式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"p2"</span>).style.color=<span class="string">"blue"</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"p2"</span>).style.fontFamily=<span class="string">"Arial"</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"p2"</span>).style.fontSize=<span class="string">"larger"</span>;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>以上段落通过脚本修改。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果为：</p><p><img src="img\img13.png" alt="img9"></p><h5 id="1-5-元素操作"><a href="#1-5-元素操作" class="headerlink" title="1.5 元素操作"></a>1.5 元素操作</h5><h6 id="1-5-1-创建新元素"><a href="#1-5-1-创建新元素" class="headerlink" title="1.5.1 创建新元素"></a>1.5.1 创建新元素</h6><p>如需向 HTML DOM 添加新元素，您必须首先创建该元素（元素节点），然后向一个已存在的元素追加该元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>这是另一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> para=<span class="built_in">document</span>.createElement(<span class="string">"p"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> node=<span class="built_in">document</span>.createTextNode(<span class="string">"这是一个新段落。"</span>);</span></span><br><span class="line"><span class="undefined">para.appendChild(node);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> element=<span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="undefined">element.appendChild(para);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例子说明：</p><p>这段代码创建新的</p><p> 元素：</p><p>var para=document.createElement(“p”);</p><p>如需向 </p><p> 元素添加文本，您必须首先创建文本节点。这段代码创建了一个文本节点：</p><p>var node=document.createTextNode(“这是一个新段落。”);</p><p>然后必须向 </p><p> 元素追加这个文本节点：</p><p>para.appendChild(node);</p><p>最后必须向一个已有的元素追加这个新元素。</p><p>这段代码找到一个已有的元素：</p><p>var element=document.getElementById(“div1”);</p><p>以下代码在已存在的元素后添加新元素：</p><p>element.appendChild(para);</p><h6 id="1-5-2-删除已有的-HTML-元素"><a href="#1-5-2-删除已有的-HTML-元素" class="headerlink" title="1.5.2 删除已有的 HTML 元素"></a>1.5.2 删除已有的 HTML 元素</h6><p>以下代码演示了如何删除元素：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>这是另一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> parent=<span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> child=<span class="built_in">document</span>.getElementById(<span class="string">"p1"</span>);</span></span><br><span class="line"><span class="undefined">parent.removeChild(child);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例子说明：</p><p>这个 HTML 文档含有拥有两个子节点（两个 </p><p> 元素）的 <div> 元素：</div></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>这是另一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>找到 id=”div1” 的元素：</p><p>var parent=document.getElementById(“div1”);</p><p>找到 id=”p1” 的 </p><p> 元素：</p><p>var child=document.getElementById(“p1”);</p><p>从父元素中删除子元素：</p><p>parent.removeChild(child);</p><p>如果能够在不引用父元素的情况下删除某个元素，就太好了。不过很遗憾。DOM 需要清楚您需要删除的元素，以及它的父元素。</p><p>这是常用的解决方案：找到您希望删除的子元素，然后使用其 parentNode 属性来找到父元素：</p><p>var child=document.getElementById(“p1”);<br>child.parentNode.removeChild(child);</p><h5 id="1-6-DOM事件"><a href="#1-6-DOM事件" class="headerlink" title="1.6 DOM事件"></a>1.6 DOM事件</h5><p>HTML DOM 允许我们通过触发事件来执行代码。</p><p>比如以下事件：</p><ul><li>元素被点击。</li><li>页面加载完成。</li><li>输入框被修改。</li></ul><p>在接下来的章节，你会学到更多关于事件的知识。</p><p>本例改变了 id=”id1” 的 HTML 元素的样式，当用户点击按钮时：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"id1"</span>&gt;</span>myH1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"document.getElementById('id1').style.color='red'"</span>&gt;</span></span><br><span class="line">button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>点击前：</p><p><img src="img\img14.png" alt="img9"></p><p>点击后：</p><p><img src="img\img15.png" alt="img9"></p><p>HTML DOM 使 JavaScript 有能力对 HTML 事件做出反应。</p><p>HTML 事件的例子：</p><ul><li>当用户点击鼠标时</li><li>当网页已加载时</li><li>当图像已加载时</li><li>当鼠标移动到元素上时</li><li>当输入字段被改变时</li><li>当提交 HTML 表单时</li><li>当用户触发按键时</li></ul><p>在本例中，当用户在 </p><h1> 元素上点击时，会改变其内容：<p></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">onclick</span>=<span class="string">"this.innerHTML='Ooops!'"</span>&gt;</span>点击文本!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本例从事件处理器调用一个函数：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">changetext</span>(<span class="params">id</span>)</span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="javascript">    id.innerHTML=<span class="string">"Ooops!"</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">onclick</span>=<span class="string">"changetext(this)"</span>&gt;</span>点击文本!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如需向 HTML 元素分配 事件，您可以使用事件属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"displayDate()"</span>&gt;</span>点这里<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>HTML DOM 允许您使用 JavaScript 来向 HTML 元素分配事件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"myBtn"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;displayDate()&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>事件种类介绍</p><p>onload 和 onunload 事件会在用户进入或离开页面时被触发。</p><p>onload 事件可用于检测访问者的浏览器类型和浏览器版本，并基于这些信息来加载网页的正确版本。</p><p>onload 和 onunload 事件可用于处理 cookie。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"checkCookies()"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>onchange 事件常结合对输入字段的验证来使用。</p><p>下面是一个如何使用 onchange 的例子。当用户改变输入字段的内容时，会调用 upperCase() 函数。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"fname"</span> <span class="attr">onchange</span>=<span class="string">"upperCase()"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>onmouseover 和 onmouseout 事件可用于在用户的鼠标移至 HTML 元素上方或移出元素时触发函数。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onmouseover</span>=<span class="string">"mOver(this)"</span> <span class="attr">onmouseout</span>=<span class="string">"mOut(this)"</span> <span class="attr">style</span>=<span class="string">"background-color:#D94A38;width:120px;height:20px;padding:40px;"</span>&gt;</span>Mouse Over Me<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">mOver</span>(<span class="params">obj</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">obj.innerHTML=<span class="string">"Thank You"</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">mOut</span>(<span class="params">obj</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">obj.innerHTML=<span class="string">"Mouse Over Me"</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>onmousedown, onmouseup 以及 onclick 构成了鼠标点击事件的所有部分。首先当点击鼠标按钮时，会触发 onmousedown 事件，当释放鼠标按钮时，会触发 onmouseup 事件，最后，当完成鼠标点击时，会触发 onclick 事件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">lighton</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">'myimage'</span>).src=<span class="string">"bulbon.gif"</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">lightoff</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">'myimage'</span>).src=<span class="string">"bulboff.gif"</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"myimage"</span> <span class="attr">onmousedown</span>=<span class="string">"lighton()"</span> <span class="attr">onmouseup</span>=<span class="string">"lightoff()"</span> <span class="attr">src</span>=<span class="string">"bulboff.gif"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"180"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>点击不释放鼠标灯将一直亮着!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-7-EventListener"><a href="#1-7-EventListener" class="headerlink" title="1.7 EventListener"></a>1.7 EventListener</h5><p>addEventListener() 方法</p><p>在用户点击按钮时触发监听事件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById("myBtn").addEventListener("click", displayDate);</span><br></pre></td></tr></table></figure><p>addEventListener() 方法用于向指定元素添加事件句柄。</p><p>addEventListener() 方法添加的事件句柄不会覆盖已存在的事件句柄。</p><p>你可以向一个元素添加多个事件句柄。</p><p>你可以向同个元素添加多个同类型的事件句柄，如：两个 “click” 事件。</p><p>你可以向任何 DOM 对象添加事件监听，不仅仅是 HTML 元素。如： window 对象。</p><p>addEventListener() 方法可以更简单的控制事件（冒泡与捕获）。</p><p>当你使用 addEventListener() 方法时, JavaScript 从 HTML 标记中分离开来，可读性更强， 在没有控制HTML标记时也可以添加事件监听。</p><p>你可以使用 removeEventListener() 方法来移除事件的监听。</p><p>语法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.addEventListener(event, function, useCapture);</span><br></pre></td></tr></table></figure><p>第一个参数是事件的类型 (如 “click” 或 “mousedown”).  把on去掉</p><p>第二个参数是事件触发后调用的函数。</p><p>第三个参数是个布尔值用于描述事件是冒泡还是捕获。该参数是可选的。</p><p><em>注意:不要使用 “on” 前缀。 例如，使用 “click” ,而不是使用 “onclick”。</em></p><p>当用户点击元素时弹出 “Hello World!” :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">element.addEventListener("click", myFunction);</span><br><span class="line"></span><br><span class="line">function myFunction() &#123;</span><br><span class="line">    alert ("Hello World!");</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>addEventListener() 方法允许向同个元素添加多个事件，且不会覆盖已存在的事件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element.addEventListener("click", myFunction);</span><br><span class="line">element.addEventListener("click", mySecondFunction);</span><br></pre></td></tr></table></figure><p>事件冒泡或事件捕获？</p><p>事件传递有两种方式：冒泡与捕获。</p><p>事件传递定义了元素事件触发的顺序。 如果你将 </p><p> 元素插入到 <div> 元素中，用户点击 <p> 元素, 哪个元素的 “click” 事件先被触发呢？</p><p>在 <em>冒泡 </em>中，内部元素的事件会先被触发，然后再触发外部元素，即： </p><p> 元素的点击事件先触发，然后会触发 <div> 元素的点击事件。</div></p><p>在 <em>捕获 </em>中，外部元素的事件会先被触发，然后才会触发内部元素的事件，即： <div> 元素的点击事件先触发 ，然后再触发 <p> 元素的点击事件。</p><p>addEventListener() 方法可以指定 “useCapture” 参数来设置传递类型：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(event, function, useCapture);</span><br></pre></td></tr></table></figure><p>默认值为 false, 即冒泡传递，当值为 true 时, 事件使用捕获传递。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById("myDiv").addEventListener("click", myFunction, true);</span><br></pre></td></tr></table></figure><p>removeEventListener() 方法移除由 addEventListener() 方法添加的事件句柄:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.removeEventListener("mousemove", myFunction);</span><br></pre></td></tr></table></figure><h4 id="第二节-JavaScript的BOM"><a href="#第二节-JavaScript的BOM" class="headerlink" title="第二节 JavaScript的BOM"></a>第二节 JavaScript的BOM</h4><p>浏览器对象模型 (BOM) 使 JavaScript 有能力与浏览器”对话”。</p><p>浏览器对象模型 (BOM):(<strong>B</strong>rowser <strong>O</strong>bject <strong>M</strong>odel)尚无正式标准。</p><p>由于现代浏览器已经（几乎）实现了 JavaScript 交互性方面的相同方法和属性，因此常被认为是 BOM 的方法和属性。</p><h5 id="2-1-window"><a href="#2-1-window" class="headerlink" title="2.1 window"></a>2.1 window</h5><p>所有浏览器都支持 window 对象。它表示浏览器窗口。</p><p>所有 JavaScript 全局对象、函数以及变量均自动成为 window 对象的成员。</p><p>全局变量是 window 对象的属性。</p><p>全局函数是 window 对象的方法。</p><p>甚至 HTML DOM 的 document 也是 window 对象的属性之一：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.document.getElementById("header");</span><br></pre></td></tr></table></figure><p>与此相同：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById("header");</span><br></pre></td></tr></table></figure><h6 id="2-1-1-window尺寸"><a href="#2-1-1-window尺寸" class="headerlink" title="2.1.1 window尺寸"></a>2.1.1 window尺寸</h6><p>有三种方法能够确定浏览器窗口的尺寸。</p><p>对于Internet Explorer、Chrome、Firefox、Opera 以及 Safari：</p><ul><li>window.innerHeight - 浏览器窗口的内部高度(不包括滚动条、菜单栏、工具栏)</li><li>window.innerWidth - 浏览器窗口的内部宽度(不包括滚动条、菜单栏、工具栏)</li></ul><p>对于 Internet Explorer 8、7、6、5：</p><ul><li>document.documentElement.clientHeight</li><li>document.documentElement.clientWidth</li></ul><p>或者</p><ul><li>document.body.clientHeight</li><li>document.body.clientWidth</li></ul><p>实用的 JavaScript 方案（涵盖所有浏览器）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> w=<span class="built_in">window</span>.innerWidth||<span class="built_in">document</span>.documentElement.clientWidth||<span class="built_in">document</span>.body.clientWidth;</span><br><span class="line"><span class="keyword">var</span> h=<span class="built_in">window</span>.innerHeight||<span class="built_in">document</span>.documentElement.clientHeight||<span class="built_in">document</span>.body.clientHeight;</span><br></pre></td></tr></table></figure><h6 id="2-1-2-window方法"><a href="#2-1-2-window方法" class="headerlink" title="2.1.2 window方法"></a>2.1.2 window方法</h6><ul><li>window.open() - 打开新窗口</li><li>window.close() - 关闭当前窗口</li><li>window.moveTo() - 移动当前窗口</li><li>window.resizeTo() - 调整当前窗口的尺寸</li></ul><h6 id="2-1-3-Screen"><a href="#2-1-3-Screen" class="headerlink" title="2.1.3 Screen"></a>2.1.3 Screen</h6><ul><li>可用宽度：screen.availWidth 属性返回访问者屏幕的宽度，以像素计，减去界面特性，比如窗口任务栏。</li></ul><p>返回您的屏幕的可用宽度：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">"可用宽度: "</span> + screen.availWidth);</span><br></pre></td></tr></table></figure><p>以上代码输出为：</p><p>可用宽度: 1920</p><ul><li>可用高度：screen.availHeight 属性返回访问者屏幕的高度，以像素计，减去界面特性，比如窗口任务栏。</li></ul><p>返回您的屏幕的可用高度：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">"可用高度: "</span> + screen.availHeight);</span><br></pre></td></tr></table></figure><p>以上代码将输出：</p><p>可用高度: 1040</p><h6 id="2-1-4-Location"><a href="#2-1-4-Location" class="headerlink" title="2.1.4 Location"></a>2.1.4 Location</h6><p>window.location 对象用于获得当前页面的地址 (URL)，并把浏览器重定向到新的页面。</p><p><strong>window.location</strong> 对象在编写时可不使用 window 这个前缀。 一些例子：</p><p>一些实例:</p><ul><li>location.href 属性返回当前页面的 URL。</li><li>location.hostname 返回 web 主机的域名</li><li>location.pathname 返回当前页面的路径和文件名</li><li>location.port 返回 web 主机的端口 （80 或 443）</li><li>location.protocol 返回所使用的 web 协议（http:// 或 https://）</li></ul><p>location.href 属性返回当前页面的 URL。</p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.write(location.href);</span><br></pre></td></tr></table></figure><p>以上代码输出为：</p><p><a href="http://www.xxx.com/js/my.html" target="_blank" rel="noopener">http://www.xxx.com/js/my.html</a></p><p>location.pathname 属性返回 URL 的路径名。</p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.write(location.pathname);</span><br></pre></td></tr></table></figure><p>以上代码输出为：</p><p>/js/my.html</p><p>location.assign() 方法加载新的文档。</p><p>加载一个新的文档：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">newDoc</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="undefined">  &#123;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.location.assign(<span class="string">"http://www.baidu.com/"</span>)</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Load new document"</span> <span class="attr">onclick</span>=<span class="string">"newDoc()"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="2-1-5-History"><a href="#2-1-5-History" class="headerlink" title="2.1.5 History"></a>2.1.5 History</h6><p>window.history 对象包含浏览器的历史。</p><p>window.history 对象在编写时可不使用 window 这个前缀。</p><p>为了保护用户隐私，对 JavaScript 访问该对象的方法做出了限制。</p><p>一些方法：</p><ul><li>history.back() - 与在浏览器点击后退按钮相同</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">goBack</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="undefined">  &#123;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.history.back()</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Back"</span> <span class="attr">onclick</span>=<span class="string">"goBack()"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>history.forward() - 与在浏览器中点击按钮向前相同</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">goForward</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="undefined">  &#123;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.history.forward()</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Forward"</span> <span class="attr">onclick</span>=<span class="string">"goForward()"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="2-1-6-Navigator"><a href="#2-1-6-Navigator" class="headerlink" title="2.1.6 Navigator"></a>2.1.6 Navigator</h6><p><strong>window.navigator</strong> 对象在编写时可不使用 window 这个前缀。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">txt = <span class="string">"&lt;p&gt;浏览器代号: "</span> + navigator.appCodeName + <span class="string">"&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="javascript">txt+= <span class="string">"&lt;p&gt;浏览器名称: "</span> + navigator.appName + <span class="string">"&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="javascript">txt+= <span class="string">"&lt;p&gt;浏览器版本: "</span> + navigator.appVersion + <span class="string">"&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="javascript">txt+= <span class="string">"&lt;p&gt;启用Cookies: "</span> + navigator.cookieEnabled + <span class="string">"&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="javascript">txt+= <span class="string">"&lt;p&gt;硬件平台: "</span> + navigator.platform + <span class="string">"&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="javascript">txt+= <span class="string">"&lt;p&gt;用户代理: "</span> + navigator.userAgent + <span class="string">"&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="javascript">txt+= <span class="string">"&lt;p&gt;用户代理语言: "</span> + navigator.systemLanguage + <span class="string">"&lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"example"</span>).innerHTML=txt;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="第三节-JavaScript计时"><a href="#第三节-JavaScript计时" class="headerlink" title="第三节 JavaScript计时"></a>第三节 JavaScript计时</h4><h5 id="3-1-Date对象"><a href="#3-1-Date对象" class="headerlink" title="3.1 Date对象"></a><strong>3.1 Date对象</strong></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">document</span>.write(d);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;br/&gt;"</span>)</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"年份："</span>+(d.getYear()+<span class="number">1900</span>));</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;br/&gt;"</span>)</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"年份："</span>+d.getFullYear());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"月份:"</span>+(d.getMonth()+<span class="number">1</span>))</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"日期:"</span>+d.getDate());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"小时:"</span>+d.getHours());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"分钟:"</span>+d.getMinutes());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"秒:"</span>+d.getSeconds());</span><br></pre></td></tr></table></figure><h5 id="3-2-JavaScript计时事件"><a href="#3-2-JavaScript计时事件" class="headerlink" title="3.2 JavaScript计时事件"></a>3.2 JavaScript计时事件</h5><p>setInterval() 间隔指定的毫秒数不停地执行指定的代码：</p><p>每三秒弹出 “hello” ：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">"Hello"</span>)&#125;,<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>实例展示了如何使用 setInterval() 方法，但是每三秒弹出一次对用户体验并不好。</p><p>以下实例将显示当前时间。 setInterval() 方法设置每秒钟执行一次代码，就是手表一样。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myVar=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;myTimer()&#125;,<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTimer</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> d=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> t=d.toLocaleTimeString();</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML=t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>clearInterval() 方法用于停止 setInterval() 方法执行的函数代码。</p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"myStopFunction()"</span>&gt;</span>Stop time<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> myVar=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;myTimer()&#125;,<span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">myTimer</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> d=<span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> t=d.toLocaleTimeString();</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML=t;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">myStopFunction</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="undefined">clearInterval(myVar);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>setTimeout() 方法会返回某个值。在上面的语句中，值被储存在名为 t 的变量中。假如你希望取消这个 setTimeout()，你可以使用这个变量名来指定它。</p><p>window.setTimeout(“<em>javascript 函数</em>“,<em>毫秒数</em>);</p><p>第一个参数是含有 JavaScript 语句的字符串。这个语句可能诸如 “alert(‘5 seconds!’)”，或者对函数的调用，诸如 alertMsg()”。</p><p>第二个参数指示从当前起多少毫秒后执行第一个参数。</p><p>提示：1000 毫秒等于一秒。</p><p>等待3秒，然后弹出 “Hello”:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">"Hello"</span>)&#125;,<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>clearTimeout() 方法用于停止执行setTimeout()方法的函数代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myVar;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">myVar=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">"Hello"</span>)&#125;,<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myStopFunction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">clearTimeout(myVar);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p></div></p></h1>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;JavaScript的DOM和BOM&quot;&gt;&lt;a href=&quot;#JavaScript的DOM和BOM&quot; class=&quot;headerlink&quot; title=&quot;JavaScript的DOM和BOM&quot;&gt;&lt;/a&gt;JavaScript的DOM和BOM&lt;/h3&gt;&lt;h4 id=&quot;第一节-JavaScript的DOM&quot;&gt;&lt;a href=&quot;#第一节-JavaScript的DOM&quot; class=&quot;headerlink&quot; title=&quot;第一节 JavaScript的DOM&quot;&gt;&lt;/a&gt;第一节 JavaScript的DOM&lt;/h4&gt;&lt;p&gt;JavaScript主要包括三部分内容:ECMAScript、DOM、BOM&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>心之所向，素履以往</title>
    <link href="http://yoursite.com/2018/08/30/Thorn/"/>
    <id>http://yoursite.com/2018/08/30/Thorn/</id>
    <published>2018-08-30T04:05:56.829Z</published>
    <updated>2018-08-31T05:31:26.682Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thorn.jpg"></p><p>人这一生，最幸运的事情便是努力就能得到回报，若是遇到一二，定要尽力抓住。</p><a id="more"></a><p>1.与其驻足，叹咫尺即天涯，不如上路，笑看天涯亦咫尺。</p><p>2.生活多么无趣，但一则则无趣的生活编织在一起，才构成了生命的繁华。</p><p>3.有很多人，你原以为可以忘记。其实没有。他们一直在你心底的一个角落。直到你的生命尽头。在尽头你会怀念每一个角落里的黑暗之中的光，因为他们组成你的记忆与感情。但是你已经不能拥抱他们。只能在最后明白，路途是一个念念不忘的失去的过程。</p><p>4.我们在电影里看着别人替我们过着梦里的人生，看着他们替我们爱，替我们死，动容之时流下眼泪——擦干之后，那不过是灰飞烟灭的幻象，生活仍然一无所有。</p><p>5.我自倾杯，君且随意 ：最深情的话莫过于此了。</p><p>6.但愿你的旅途漫长，但愿你拥抱的人正泪流不止。但愿你付出的爱，有着某种恰到好处的形状，恰能完好地镶嵌在她的灵魂空缺处，毫厘不差。但愿你心底关怀，杯满四溢，又正在被另一个孤独的灵魂渴望着。</p><p>7.但愿你记得，在你痛哭失声的时刻，曾有人以肩窝盛满你的泪。</p><p>8.路是时光的血脉，通向生命不可知的隘口。</p><p>9.我想去相信一个人，非常想。可是每个人在这个世界上忙着生，忙着死，所有人都是如此窘迫的姿态。令我不忍心再向别人索求关怀。如果我们想不对人或事失望，惟一的方法就是不要对它给予任何希望。这不是绝望，这是生存下去的惟一途径，亦是获取幸福感的前提。</p><p>10.我想，沉默是成长的标志，而成熟的标志，就是如何去沉默。我不能说我们生如夏花，活得完美而睿智，死如秋叶亦离我们非常遥远，当下最真实的，不过是一种宽宏和原谅，对自身、他人，以及这个失望和希望并存的世界。</p><p>11.在这个吵得人分不清东南西北得世界里，我们手里所持有的干干净净的初衷，不多了。握好了，别丢了。明天还要赶很远的路。</p><p>12.隐忍平凡的外壳下，要像果实般有着汁甜水蜜的肉瓤，以及一颗坚硬闪亮的内核。</p><p>13.心之所向，素履以往。生如逆旅， 一苇以航。</p><p>14.做学生的时候，身是不自由的，但心却很自由，有多远梦多远。而今，身是自由的，但心已经无法自由。有多少梦，就有多远。</p><p>15.一段感情若势如破竹，最后也往往兵败如山倒。但也曾算是，像把每一天当成是最后一天来珍惜生命那般，把眼前人当成是最后一个人来珍惜感情。奈何世事无常，人无常，爱无常。花辞树，以叶为美。叶落尽，以枝为姿。枝若朽，以根为雕。感情若如四季，我愿如良木。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/Thorn.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;人这一生，最幸运的事情便是努力就能得到回报，若是遇到一二，定要尽力抓住。&lt;/p&gt;
    
    </summary>
    
      <category term="美文" scheme="http://yoursite.com/categories/%E7%BE%8E%E6%96%87/"/>
    
    
      <category term="文章" scheme="http://yoursite.com/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
</feed>

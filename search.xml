<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[mysql操作命令总结]]></title>
    <url>%2F2018%2F09%2F01%2Fmysql%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[以下是对mysql基本操作命令进行的总结，只是针对单表进行的一些操作，不包括多表操作。 mysql服务命令启动mysql服务：net start mysql 关闭mysql服务：ner stop mysql 注意：管理员身份才能开关 mysql连接命令mysql连接：mysql -uroot -p; 输入密码：password:xxxxx mysql断开连接：quit或exit (Linxu中也可以ctrl+D) mysql基本数据类型常用数据类型： int：整型（4个字节） double：浮点型（8个字节），近似值 例如double(5,2)表示最多5位，其中必须有2位小数，即最大值为999.99 decimal：精确数值数据，最大位数可以是65 例如decimal(5,2)能够存储具有五位数和两位小数的任何值，因此可以存储范围为-999.99至999.99。 char：固定长度字符串类型； char(10) ‘aaa ‘ 固定10个字符，不足补空格， 长度0-255 缺点：浪费空间，优点:查询速度快 varchar：可变长度字符串类型； varchar(10) ‘aaa’ 最多存储10个字符 缺点：查询速度慢，优点：节省空间 text：大文本字符串类型；有字符编码，存储比较大的文本数据。 blob：Binary Large Object二进制大对象数据；可以存储图片、音频、视频 date：日期类型，格式为：yyyy-MM-dd； time：时间类型，格式为：hh:mm:ss timestamp：时间戳类型 yyyy-MM-dd hh:mm:ss 会自动赋值 datetime:日期时间类型 yyyy-MM-dd hh:mm:ss 数据类型 指定值和范围 char String(0~255) varchar String(0~255) tinytext String(0~255) text String(0~65536) blob String(0~65536) mediumtext String(0~16777215) mediumblob String(0~16777215) longblob String(0~4294967295) int Integer(-214847668~214847667) bigint Integer(-9223372036854775808~9223372036854775807) float decimal(精确到23位小数) double decimal(24~54位小数) decimal 将double转储为字符串形式 date YYYY-MM-DD datetime YYYY-MM-DD HH:MM:SS timestamp YYYYMMDDHHMMSS time HH:MM:SS enum 选项值之一 set 选项值子集 mysql常用约束 ​主键约束：primary key (保证数据唯一性),不能重复，不能为null 唯一约束：unique [key],不能重复，可以为null 非空约束：not null 默认约束：default 外键约束：foreign key 自动增长：auto_increment mysql数据库操作命令查询数据库121.show databases; 显示当前mysql中的数据库2.show create databaes 数据库名; 查看数据库定义信息 系统默认数据库 information_schema: 1information_schema数据库是MySQL自带的，它提供了访问数据库元数据的方式。什么是元数据呢？元数据是关于数据的数据，如数据库名或表名，列的数据类型，或访问权限等。 mysql: 1mysql：这个是mysql的核心数据库,主要负责存储数据库的用户、权限设置、关键字等mysql自己需要使用的控制和管理信息，不可以删除。 performance_schema: 1性能优化的数据库 test: 1这个是安装时候创建的一个测试数据库，和它的名字一样，是一个完全的空数据库，没有任何表，可以删除。 创建数据库12341.create database 自定义数据库名;（数据库已存在会报错）2.create database if not exists 数据库名 character set gbk;（先判断数据库存不存在，不存在在创建，并设置数据库编码）if not exists 不存在则执行后面语句 修改数据库12修改数据库编码为utf8alter database 数据库名 character set utf8; 删除数据库123drop database 数据库名;（数据库不存在会报错）drop database if exists 数据库名;（先判断数据库存在与否，存在在删除）if exists 判断数据库是否存在（存在则执行后面语句） 其他操作121.use 数据库名; 切换数据库2.select databaes(); 查看当前选择的数据库,没有选择数据库，为null; mysql数据表操作命令查询数据表12show tables;显示当前选择数据库的表show create table 表名;查看表创建细节 创建数据表123456789101112131415161718语法： CREATE TABLE [IF NOT EXISTS] 表名( 字段1 字段类型(长度) 约束, 字段2 字段类型(长度) 约束, ... 字段n 字段类型(长度) 约束 ) [charset=utf8];例子：CREATE TABLE IF NOT EXISTS student( id INT NOT NULL, name VARCHAR(50), age INT, address VARCHAR(100)) CHARSET=utf8; 注意：数据库名、表名、字段名可以使用反勾号` 括住，也可以不括。如果SQL关键字一般要括住。 修改数据表12345678910111.给当前表增加一列（添加一个字段）alter table 表名 add 列名 类型(长度) 约束;2.修改当前表字段类型长度alter table 表名 modify 字段名 新的字段类型(新的长度);3.删除当前表的一列alter table 表名 drop 列名;4.修改表的字符集为gbkalter table 表名 character set gbk;5.修改列名alter table 表名 change 列名 新的列名 字段类型（长度）;注意:列名即字段名 删除数据表12drop table 表名drop if exists 表名; 先判断在删除 其他操作123desc 表名; 查看表结构或字段信息rename table 表名 to 新表名; 修改表名show create table 表名; 查看表的创建细节 mysql数据操作命令查询数据​查询语句书写顺序：select 列 from 表 【where- group by- having- order by-limit】 ​查询语句执行顺序：from 表 where -group by -having - select - order by-limit 简单查询12select * from 表名; 查询所有列，*表示所有列select 列名1,列名2,... from 表名; 查询指定列 条件查询条件查询就是在查询时给出WHERE子句，在WHERE子句中可以使用如下运算符及关键字： 比较运算符 12341.=、!=、&lt;&gt;、&lt;、&lt;=、&gt;、&gt;=；2.BETWEEN…AND；3.IN(set)；4.IS NULL； 关系运算符 1231.AND 2.OR3.NOT 注意：AND运算符优先级高于OR,如果需要先执行OR需要添加括号（）改变。 算数运算符 1+ - * / % 例子 12345678910111213141516171819202122232425262728#查询学生表性别为女，而且年龄大于50的人SELECT * FROM stu WHERE gender='female' AND age&gt;50;#查询查询学号为S_1001，或者姓名为liSi的记录SELECT * FROM stu WHERE sid='S_1001' OR sname='liSi';#查询学号为S1001，S1002，S_1003的记录SELECT * FROM stu WHERE sid IN ('S_1001','S_1002','S_1003');#查询学号不是S1001，S1002，S_1003的记录SELECT * FROM stu WHERE sid NOT IN ('S_1001','S_1002','S_1003');SELECT * FROM stu WHERE NOT sid IN ('S_1001','S_1002','S_1003');#查询年龄为null的记录SELECT * FROM stu WHERE age IS NULL;#查询年龄在20到40之间的学生记录SELECT * FROM stu WHERE age BETWEEN 20 AND 40;SELECT * FROM stu WHERE age&gt;20 AND age&lt;40;#查询性别非男的学生记录SELECT * FROM stu WHERE gender!='male';SELECT * FROM stu WHERE NOT gender='male';SELECT * FROM stu WHERE gender&lt;&gt;'male';#查询姓名不为null的学生记录SELECT * FROM stu WHERE NOT sname IS NULL;SELECT * FROM stu WHERE sname IS NOT NULL; 模糊查询模糊查询需要使用关键字like和通配符： _任意一个 %任意0到n个字符 例子 1234567891011121314#查询姓名由3个字符构成的学生记录SELECT * FROM stu WHERE sname LIKE '___';#查询姓名由5个字符构成，并且第5个字符为“i”的学生记录SELECT * FROM stu WHERE sname LIKE '____i';#查询姓名以“z”开头的学生记录SELECT * FROM stu WHERE sname LIKE 'z%';#查询姓名中第2个字符为“i”的学生记录SELECT * FROM stu WHERE sname LIKE '_i%';#查询姓名中包含“a”字符的学生记录SELECT * FROM stu WHERE sname LIKE '%a%'; 字段控制查询 去除重复记录 12使用distinct关键字select distinct 列名1,列名2,... from 表名; 合并数据 1234567(1)数值类型数据直接进行加法运算select *,数值列名+数值列名 from 表名;(2)字符串类型合并不能直接进行加运算，需要使用concat(列名,'____',列名);select *,CONCAT(列名,'-',列名) from 表名;(3)有的列记录包含很多NULL值，因为任何东西与NULL相加结果还是NULL，所以结算结果可能会出现NULL。可以使用IFNULL函数将NULL值转换为0select *,列名+IFNULL(列名,0) from 表名; 给列名添加别名 12使用AS关键字select *,CONCAT(列名,'-',表名) as 别名 from 表名; 注意：AS关键字可以省略 排序12使用ORDER BY关键字，desc表示降序，asc表示升序（默认升序）select * from 表名 Order by 列名1 DESC,列名2 ASC; 先按列名1数据进行降序排序，相同在按列名2数据升序排序 聚合函数聚合函数是用来做纵向运算的函数： COUNT()：统计指定列不为NULL的记录行数； MAX()：计算指定列的最大值，如果指定列是字符串类型，那么使用字符串排序运算； MIN()：计算指定列的最小值，如果指定列是字符串类型，那么使用字符串排序运算； SUM()：计算指定列的数值和，如果指定列类型不是数值类型，那么计算结果为0； AVG()：计算指定列的平均值，如果指定列类型不是数值类型，那么计算结果为0； 分组查询分组查询时需要使用GROUP BY 子句 HAVING子句可以对分组后的数据进行过滤 注：凡是和聚合函数同时出现的列名，则一定要写在group by 之后 12345678#查询每个部门的部门编号和每个部门的工资和：SELECT deptno,SUM(sal) FROM emp GROUP BY deptno;#查询每个部门的部门编号以及每个部门工资大于1500的人数SELECT deptno,COUNT(*) FROM emp WHERE sal&gt;1500 GROUP BY deptno;#查询工资总和大于9000的部门编号以及工资和：SELECT deptno,COUNT(*) FROM emp GROUP BY deptno HAVING SUM(sal)&gt;1500; 注：having与where的区别: having是在分组后对数据进行过滤,where是在分组前对数据进行过滤 having后面可以使用分组函数(统计函数) where后面不可以使用分组函数。 where是对分组前记录的条件，如果某行记录没有满足WHERE子句的条件，那么这行记录不会参加分组；而 having是对分组后数据的约束。 LIMIT限制（分页查询）LIMIT用来限定查询结果的起始行，以及总行数。 1234#查询前5行数据SELECT * FROM emp LIMIT 0,5;#查询5到10行数据SELECT * FROM emp LIMIT 5,5; 注意，起始行从0开始，即第一行开始！ 分页查询： 如果一页记录为10条，希望查看第3页记录应该怎么查呢？ l 第一页记录起始行为0，一共查询10行; l 第二页记录起始行为10，一共查询10行; l 第三页记录起始行为20，一共查询10行; 增加数据1insert into 表名 (列名1,列名2,...) values(列值1,列值2,,...); 注意: 列名与列值的类型、个数、顺序要一一对应。 可以把列名当做java中的形参，把列值当做实参。 参数不要超出列定义的长度。 如果插入空值，请使用null 插入的日期和字符一样，都使用单引号括起来。 修改数据12update 表名 set 列名1=列值1,列名2=列值2,...where 列名=列值;where后面是修改条件（可选操作）; 删除数据1231.delete from 表名; 删除表中所有数据2.delete from 表名 where 列名=列值; 删除满足where后面条件的数据3.truncate table emp;使用truncate删除表中记录。(先把表删除，然后再创建空表) DELETE 删除表中的数据，表结构还在;删除后的数据使用日志可以找回。 TRUNCATE 删除是把表直接DROP掉，然后再创建一个同样的新表。 TRUNCATE 删除的数据不能找回。执行速度比DELETE快。]]></content>
      <categories>
        <category>命令</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mybatis简介]]></title>
    <url>%2F2018%2F08%2F31%2FMybatis%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"><![CDATA[​ MyBatis是支持定制化SQL、存储过程以及高级映射的优秀的持久层框架，MyBatis避免了几乎所有的JDBC代码和手动设置参数以及获取结果集。 ​ MyBatis可以对配置和原生Map使用简单的XML或注解，将接口和Java的POJOs(Plain Old Java Objects,普通的Java对象)映射成数据库中的记录。 框架概念百度百科：框架（Framework）是整个或部分系统的可重用设计，表现为一组抽象构件及构件实例间交互的方法;另一种定义认为，框架是可被应用开发者定制的应用骨架。对于程序员来说，框架是一套资源，一套解决某一类问题所使用的资源。这套资源中包含：Jar包、文档、源码、示例等内容，或其中部分内容。 ##MyBatis框架介绍 MyBatis框架的前身是Apache的一个项目，名称为iBaits。2010年，该项目迁移到了Google，更名为MyBatis。2013年，项目又交由GitHub托管。 我们要下载这个框架从GitHub官网下载 https://github.com/mybatis/mybatis-3/releases mybatis-3.4.2.jar MyBatis的核心Jar包lib MyBatis核心Jar包所依赖的Jar包mybatis-3.4.2.pdf MyBatis官方帮助文档 MyBatis框架的作用 MyBatis在三层架构中处于Dao层，用于访问数据库。其作用类似于JDBC。 MyBatis系统架构图 Mybatis框架运行原理API：Application Programming Interface，应用程序接口 ORM：Object Ralationship Mapping，对象关系映射 MyBatis是一种ORM框架，是半自动ORM。MyBatis底层封装了JDBC， Hibernate也是一种ORM框架，是全自动ORM。 第一个Mybatis程序功能：将一个学生信息写入DB 导入Jar包Mybatis的jar包（mybatis核心jai包和mybatis所依赖的jar包lib文件夹下的） mysql驱动的jar包 定义一个Stduent类id，name，age，score * 主键id要定义为包装类型，不要定义为基本数据类型，例如，不要定义为int，而要定义为Integer * 若显式地给出了带参构造器，则要显式地给出无参构造器。 -- 若当前实体类有可能作父类，那么要创建子类对象时，JVM会调用其父类的无参构造器 -- 若使用了Spring框架，那么要求由Spring容器所管理的类，必须要有无参构造器 创建DB表12表名：student字段：id,name,age,score 定义Dao接口IStudentDao123public interface IStudentDao &#123; void insertStudent(Student student);&#125; 定义映射文件12345678910111213* 是一个XML文件，文件名随意，我们这里叫mapper.xml。* 该文件定义到Dao接口所在包。* 约束文件为mybatis-3.4.2.jar ! /org/apache/ibatis/builder/xml/mybatis-3-mapper.dtd &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE mapperPUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&lt;mapper&gt; &lt;insert id=&quot;insertStu&quot; parameterType=&quot;com.abc.beans.Student&quot;&gt; insert into student(name,age,score) values(#&#123;name&#125;, #&#123;age&#125;, #&#123;score&#125;) &lt;/insert&gt;&lt;/mapper&gt; 定义主配置文件12345678910111213* 是一个XML文件，文件名随意，我们这里叫mybatis.xml* 定义在src根下* 约束文件为mybatis-3.4.2.jar ! /org/apache/ibatis/builder/xml/mybatis-3-config.dtd标签介绍&lt;transactionManager type=&quot;JDBC&quot; /&gt; 该标签用于指定事务管理器。type的取值有两个： JDBC：使用JDBC事务管理器 MANAGED：使用第三方事务管理器，例如使用Spring的事务管理器&lt;dataSource type=&quot;POOLED&quot;&gt; 该标签用于指定数据源类型。type的取值有三个： POOLED：使用连接池技术（默认使用的是Mybatis内置连接池） UNPOOLED：不使用连接池技术 JNDI：Java Naming-Directory Interface，Java命名与目录接口，这是一个容器。]]></content>
      <categories>
        <category>SSM框架</category>
      </categories>
      <tags>
        <tag>Mybits</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[心之所向，素履以往]]></title>
    <url>%2F2018%2F08%2F30%2FThorn%2F</url>
    <content type="text"><![CDATA[人这一生，最幸运的事情便是努力就能得到回报，若是遇到一二，定要尽力抓住。 1.与其驻足，叹咫尺即天涯，不如上路，笑看天涯亦咫尺。 2.生活多么无趣，但一则则无趣的生活编织在一起，才构成了生命的繁华。 3.有很多人，你原以为可以忘记。其实没有。他们一直在你心底的一个角落。直到你的生命尽头。在尽头你会怀念每一个角落里的黑暗之中的光，因为他们组成你的记忆与感情。但是你已经不能拥抱他们。只能在最后明白，路途是一个念念不忘的失去的过程。 4.我们在电影里看着别人替我们过着梦里的人生，看着他们替我们爱，替我们死，动容之时流下眼泪——擦干之后，那不过是灰飞烟灭的幻象，生活仍然一无所有。 5.我自倾杯，君且随意 ：最深情的话莫过于此了。 6.但愿你的旅途漫长，但愿你拥抱的人正泪流不止。但愿你付出的爱，有着某种恰到好处的形状，恰能完好地镶嵌在她的灵魂空缺处，毫厘不差。但愿你心底关怀，杯满四溢，又正在被另一个孤独的灵魂渴望着。 7.但愿你记得，在你痛哭失声的时刻，曾有人以肩窝盛满你的泪。 8.路是时光的血脉，通向生命不可知的隘口。 9.我想去相信一个人，非常想。可是每个人在这个世界上忙着生，忙着死，所有人都是如此窘迫的姿态。令我不忍心再向别人索求关怀。如果我们想不对人或事失望，惟一的方法就是不要对它给予任何希望。这不是绝望，这是生存下去的惟一途径，亦是获取幸福感的前提。 10.我想，沉默是成长的标志，而成熟的标志，就是如何去沉默。我不能说我们生如夏花，活得完美而睿智，死如秋叶亦离我们非常遥远，当下最真实的，不过是一种宽宏和原谅，对自身、他人，以及这个失望和希望并存的世界。 11.在这个吵得人分不清东南西北得世界里，我们手里所持有的干干净净的初衷，不多了。握好了，别丢了。明天还要赶很远的路。 12.隐忍平凡的外壳下，要像果实般有着汁甜水蜜的肉瓤，以及一颗坚硬闪亮的内核。 13.心之所向，素履以往。生如逆旅， 一苇以航。 14.做学生的时候，身是不自由的，但心却很自由，有多远梦多远。而今，身是自由的，但心已经无法自由。有多少梦，就有多远。 15.一段感情若势如破竹，最后也往往兵败如山倒。但也曾算是，像把每一天当成是最后一天来珍惜生命那般，把眼前人当成是最后一个人来珍惜感情。奈何世事无常，人无常，爱无常。花辞树，以叶为美。叶落尽，以枝为姿。枝若朽，以根为雕。感情若如四季，我愿如良木。]]></content>
      <categories>
        <category>美文</category>
      </categories>
      <tags>
        <tag>文章</tag>
      </tags>
  </entry>
</search>
